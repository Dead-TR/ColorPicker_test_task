{"version":3,"sources":["components/SelectColor/SelectColor.js","components/ColorEdit/ColorEdit.js","components/ColorChangeWindow/ColorChangeWindow.js","components/ColorPicker/ColorPicker.js","App.js","index.js"],"names":["SelectColor","colorTransition","value","setValue","colors","useState","parseInt","substring","red","setRed","green","setGreen","blue","setBlue","useEffect","className","map","colorData","key","name","onClick","RGB","ColorEdit","setIsColorEdit","setIntermediateColor","intermediateColor","type","min","max","step","onChange","event","Number","target","ColorChangeWindow","isColorSelect","setIsColorSelect","isColorEdit","hider","setHider","color","toString","length","closeChoiceColor","closest","localStorage","getItem","document","addEventListener","removeEventListener","setTimeout","ColorPicker","setColor","setItem","style","background","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c86a8e43.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './SelectColor.css';\n\nexport const SelectColor = ({ colorTransition, value, setValue, colors }) => {\n\n  const [red, setRed] = useState(\n    parseInt(value.substring(1, 3), 16),\n  );\n  const [green, setGreen] = useState(\n    parseInt(value.substring(3, 5), 16),\n  );\n  const [blue, setBlue] = useState(\n    parseInt(value.substring(7, 5), 16),\n  );\n\n  useEffect(() => {\n    setValue(`#${\n      colorTransition(red)\n    }${\n      colorTransition(green)\n    }${\n      colorTransition(blue)\n    }`);\n  }, [red, green, blue]);\n\n  return (\n    <section className=\"SelectColor\">\n      <div className=\"SelectColor__triangle\" />\n      {colors.map((colorData) => (\n        <div\n          className=\"SelectColor__item\"\n          key={colorData.name}\n          onClick={() => {\n            setRed(colorData.RGB.red);\n            setBlue(colorData.RGB.blue);\n            setGreen(colorData.RGB.green);\n          }}\n        >\n          <p className=\"SelectColor__name\">\n            {colorData.name}\n          </p>\n          <div\n            className={\n              `SelectColor__color SelectColor__color_${colorData.name}`\n            }\n          />\n        </div>\n      ))}\n    </section>\n  );\n};\n\nSelectColor.propTypes = {\n  colorTransition: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  setValue: PropTypes.func.isRequired,\n  colors: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './ColorEdit.css';\n\nexport const ColorEdit = ({\n  setValue,\n  value,\n  setIsColorEdit,\n  colorTransition,\n  setIntermediateColor,\n  intermediateColor,\n}) => {\n\n  const [red, setRed] = useState(\n    parseInt(value.substring(1, 3), 16),\n  );\n  const [green, setGreen] = useState(\n    parseInt(value.substring(3, 5), 16),\n  );\n  const [blue, setBlue] = useState(\n    parseInt(value.substring(7, 5), 16),\n  );\n\n  useEffect(() => {\n    setIntermediateColor(`#${\n      colorTransition(red)\n    }${\n      colorTransition(green)\n    }${\n      colorTransition(blue)\n    }`);\n  }, [red, green, blue]);\n\n  return (\n    <section className=\"ColorEdit\">\n      <div className=\"ColorEdit__triangle\" />\n\n      <input\n        className=\"ColorEdit__range ColorEdit__range_red\"\n        type=\"range\"\n        min=\"0\"\n        max=\"255\"\n        step=\"1\"\n        onChange={(event) => {\n          setRed(Number(event.target.value))\n        }}\n        value={red}\n      />\n      <input\n        className=\"ColorEdit__range ColorEdit__range_green\"\n        type=\"range\"\n        min=\"0\"\n        max=\"255\"\n        step=\"1\"\n        onChange={(event) => {\n          setGreen(Number(event.target.value))\n        }}\n        value={green}\n      />\n      <input\n        className=\"ColorEdit__range ColorEdit__range_blue\"\n        type=\"range\"\n        min=\"0\"\n        max=\"255\"\n        step=\"1\"\n        onChange={(event) => {\n          setBlue(Number(event.target.value))\n        }}\n        value={blue}\n      />\n\n      <div className=\"ColorEdit__buttons\">\n        <button\n          className=\"ColorEdit__button ColorEdit__button_cancel\"\n          onClick={() => {\n            setIntermediateColor(value)\n            setIsColorEdit(false);\n          }}\n        >\n          cancel\n        </button>\n\n        <button\n          className=\"ColorEdit__button ColorEdit__button_ok\"\n          onClick={() => {\n            setValue(intermediateColor);\n            setIsColorEdit(false);\n          }}\n        >\n          ok\n        </button>\n      </div>\n    </section>\n  )\n}\n\nColorEdit.propTypes = {\n  setValue: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  setIsColorEdit: PropTypes.func.isRequired,\n  colorTransition: PropTypes.func.isRequired,\n  setIntermediateColor: PropTypes.func.isRequired,\n  intermediateColor: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './ColorChangeWindow.css';\n\nimport { SelectColor } from '../SelectColor/SelectColor';\nimport { ColorEdit } from '../ColorEdit/ColorEdit';\n\nexport const ColorChangeWindow = ({\n  value,\n  setValue,\n  isColorSelect,\n  setIsColorSelect,\n  isColorEdit,\n  setIsColorEdit,\n  colors,\n  setIntermediateColor,\n  intermediateColor,\n}) => {\n  const [hider, setHider] = useState(false);\n  const colorTransition = (color) => {\n    if (color.toString(16).length === 1) {\n      return `0${color.toString(16)}`;\n    }\n\n    return `${color.toString(16)}`;\n  };\n\n  const closeChoiceColor = (event) => {\n    if (\n      !(event.target.closest('.SelectColor'))\n        && !(event.target.closest('.ColorPicker__triangle-box'))\n        && !(event.target.closest('.ColorPicker__color-item'))\n        && !(event.target.closest('.ColorEdit'))\n    ) {\n      setIntermediateColor(localStorage.getItem('colorValue'))\n      setIsColorSelect(false);\n      setIsColorEdit(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', closeChoiceColor);\n\n    return () => {\n      document.removeEventListener('click', closeChoiceColor);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isColorEdit) {\n      setHider(true);\n    } else {\n      setTimeout(() => {\n        setHider(false);\n      }, 1000);\n    }\n  }, [isColorEdit]);\n\n  return (\n    <section className=\"ColorChangeWindow\">\n\n      <div\n        className={`ColorChangeWindow__SelectColor ${\n          isColorSelect && ('ColorChangeWindow__SelectColor_active')\n        }`}\n      >\n        <SelectColor\n          colorTransition={colorTransition}\n          value={value}\n          colors={colors}\n          setValue={setValue}\n        />\n      </div>\n\n      <div\n        className={`ColorChangeWindow__ColorEdit ${\n          isColorEdit && ('ColorChangeWindow__ColorEdit_active')\n        }`}\n      >\n        {hider && (\n          <ColorEdit\n            colorTransition={colorTransition}\n            setValue={setValue}\n            value={value}\n            setIsColorEdit={setIsColorEdit}\n            setIntermediateColor={setIntermediateColor}\n            intermediateColor={intermediateColor}\n          />\n        )}\n      </div>\n    </section>\n  );\n};\n\nColorChangeWindow.propTypes = {\n  value: PropTypes.string.isRequired,\n  setValue: PropTypes.func.isRequired,\n  isColorSelect: PropTypes.bool.isRequired,\n  setIsColorSelect: PropTypes.func.isRequired,\n  isColorEdit: PropTypes.bool.isRequired,\n  setIsColorEdit: PropTypes.func.isRequired,\n  colors: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setIntermediateColor: PropTypes.func.isRequired,\n  intermediateColor: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './ColorPicker.css';\n\nimport { ColorChangeWindow } from '../ColorChangeWindow/ColorChangeWindow';\n\nexport const ColorPicker = () => {\n  const [isColorSelect, setIsColorSelect] = useState(false);\n  const [isColorEdit, setIsColorEdit] = useState(false);\n\n  const [value, setValue] = useState(\n    localStorage.getItem('colorValue') || '#000000',\n  );\n  const [intermediateColor, setIntermediateColor] = useState(value);\n  const [color, setColor] = useState(value);\n\n  const colors = [\n    {\n      name: 'red',\n      RGB: {\n        red: 255,\n        blue: 0,\n        green: 0,\n      },\n    },\n    {\n      name: 'yellow',\n      RGB: {\n        red: 255,\n        blue: 0,\n        green: 255,\n      },\n    },\n    {\n      name: 'blue',\n      RGB: {\n        red: 0,\n        blue: 255,\n        green: 0,\n      },\n    },\n    {\n      name: 'green',\n      RGB: {\n        red: 0,\n        blue: 0,\n        green: 255,\n      },\n    },\n  ];\n\n  useEffect(() => {\n    if (!isColorEdit) {\n      setColor(value);\n    } else {\n      setColor(intermediateColor);\n    }\n  }, [intermediateColor, value]);\n\n  useEffect(() => {\n    localStorage.setItem('colorValue', value);\n  }, [value]);\n\n  return (\n    <section className=\"ColorPicker\">\n      <div\n        className=\"ColorPicker__unit\"\n      >\n        <div className=\"ColorPicker__name\">\n          {color}\n        </div>\n\n        <div className=\"ColorPicker__line\" />\n\n        <div\n          className=\"ColorPicker__color-box\"\n          onClick={() => {\n            setIsColorSelect(false);\n            setIsColorEdit(!isColorEdit);\n          }}\n        >\n          <div\n            className=\"ColorPicker__color-item\"\n            style={{background: color}}\n          />\n        </div>\n\n        <div className=\"ColorPicker__line\" />\n\n        <div\n          className=\"ColorPicker__triangle-box\"\n          onClick={() => {\n            setIsColorSelect(!isColorSelect);\n            setIsColorEdit(false);\n          }}\n        >\n          <div className=\"ColorPicker__triangle-item\" />\n        </div>\n      </div>\n      <ColorChangeWindow\n        value={value}\n        setValue={setValue}\n        isColorSelect={isColorSelect}\n        setIsColorSelect={setIsColorSelect}\n        isColorEdit={isColorEdit}\n        setIsColorEdit={setIsColorEdit}\n        colors={colors}\n        setIntermediateColor={setIntermediateColor}\n        intermediateColor={intermediateColor}\n      />\n    </section>\n  );\n};\n","import React from 'react';\nimport './App.css';\n\nimport { ColorPicker } from './components/ColorPicker/ColorPicker';\n\nconst App = () => (\n  <>\n    <ColorPicker />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}